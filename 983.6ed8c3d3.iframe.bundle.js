"use strict";(self.webpackChunkroot=self.webpackChunkroot||[]).push([[983],{"./packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>FormFieldSkeleton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Skeleton/Skeleton.js");const FormFieldSkeleton=({isLoading=!0,children,hideLabel})=>{const theme=(0,_mui_material__WEBPACK_IMPORTED_MODULE_1__.A)();return isLoading?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{width:"100%"},!hideLabel&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{variant:"text",width:80,sx:{fontSize:theme.typography.body1.fontSize},"data-testid":"form-field-skeleton-label"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{variant:"rounded",height:42,width:"100%","data-testid":"form-field-skeleton-input"},children)):react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children)};FormFieldSkeleton.__docgenInfo={description:"The FormFieldSkeleton component is used to display a loading skeleton\nfor form fields. It shows a skeleton text area and a skeleton input\narea when the form field is loading. The component supports options\nto hide the label and to toggle loading state.\n\n@see [Storybook - FormFieldSkeleton](https://storybook.rockets.tools/?path=/docs/formfieldskeleton)\n\n@example\n```tsx\n<FormFieldSkeleton isLoading={true} hideLabel={true}>\n  <YourComponent />\n</FormFieldSkeleton>\n```\n\n@param props - FormFieldSkeleton component props\n@returns The skeleton loading component or the children if not loading",methods:[],displayName:"FormFieldSkeleton",props:{isLoading:{required:!1,tsType:{name:"boolean"},description:"Indicates if the form field is loading",defaultValue:{value:"true",computed:!1}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"Hides the label when set to true"}}}},"./packages/react-material-ui/src/components/FormLabel/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>FormLabel});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/FormLabel/FormLabel.js"),_Text__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react-material-ui/src/components/Text/index.ts");const TEXT_INITIAL_PROPS={fontSize:14,fontWeight:500,color:"text.primary"},FormLabel=props=>{const{id,name,labelProps,label,required}=props;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{id,htmlFor:name,sx:{width:"100%"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Text__WEBPACK_IMPORTED_MODULE_1__.A,{textAlign:"left",...TEXT_INITIAL_PROPS,...labelProps},label&&`${label}${required?" *":""}`))};FormLabel.__docgenInfo={description:'The FormLabel component is used to render a label for form elements.\nIt connects the label to the form element using the `htmlFor` attribute.\n\n@see [Storybook - FormLabel](https://storybook.rockets.tools/?path=/docs/formlabel)\n\n@example\n```tsx\n<FormLabel\n  id="username-label"\n  name="username"\n  label="Username"\n  required={true}\n  labelProps={{ color: \'primary.main\', fontSize: 16 }}\n/>\n```\n\n@param FormLabelProps - FormLabel component props',methods:[],displayName:"FormLabel",props:{id:{required:!1,tsType:{name:"string"},description:"Unique identifier for the label element"},name:{required:!1,tsType:{name:"string"},description:"Name attribute for the associated input element"},label:{required:!1,tsType:{name:"string"},description:"The text to display as the form label"},required:{required:!1,tsType:{name:"boolean"},description:"Whether the associated field is required, appends an asterisk to the label if true"},labelProps:{required:!1,tsType:{name:"TextProps"},description:"Additional properties to pass to the `Text` component used for rendering the label"}}}},"./packages/react-material-ui/src/components/MultiSelect/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>MultiSelect});var react=__webpack_require__("./node_modules/react/index.js"),Chip=__webpack_require__("./node_modules/@mui/material/Chip/Chip.js"),FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),InputLabel=__webpack_require__("./node_modules/@mui/material/InputLabel/InputLabel.js"),Select=__webpack_require__("./node_modules/@mui/material/Select/Select.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),ListItemText=__webpack_require__("./node_modules/@mui/material/ListItemText/ListItemText.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),FormFieldSkeleton=__webpack_require__("./packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx"),FormLabel=__webpack_require__("./packages/react-material-ui/src/components/FormLabel/index.tsx");const allOption={value:"all",label:"All"},MultiSelect=({options=[],defaultValue,hasAllOption=!0,isLoading=!1,label,placeholder,onChange,fullWidth,size,variant="outlined",value,required,displayVariant="default",labelVariant="default",name,labelProps,...rest})=>{const isChips="chips"===displayVariant,finalOptions=[...hasAllOption?[allOption]:[],...options],renderValues=selected=>{const valuesIds=selected||value||[],valueLabels=valuesIds.map((selectedItem=>options?.find((item=>item.value===selectedItem))?.label));return isChips?valueLabels.map(((label,index)=>react.createElement(Chip.A,{key:label,label,className:"Rockets-MultiSelect-Chip",onDelete:()=>(id=>{const valueIndex=value?.indexOf(id);if(!value||"number"!=typeof valueIndex||-1===valueIndex)return;const newValue=[...value];newValue.splice(valueIndex,1),onChange(newValue)})(valuesIds[index]),sx:{borderRadius:"6px",mt:1,"&:not(:last-child)":{mr:1}}}))):valueLabels.join(", ")},labelId=`label-${name}`;return react.createElement(FormFieldSkeleton.W,{isLoading,hideLabel:!0},react.createElement(FormControl.A,{fullWidth,size},"default"===labelVariant&&react.createElement(InputLabel.A,{id:labelId,shrink:hasAllOption||!!value?.length,className:"Rockets-MultiSelect-InputLabel",htmlFor:name},label),"rockets"===labelVariant&&label&&"string"==typeof label&&react.createElement(FormLabel.l,{id:labelId,name,label,required,labelProps}),react.createElement(Select.A,{labelId,className:"Rockets-MultiSelect",defaultValue,onChange:event=>{const{target:{value}}=event,values="string"==typeof value?value.split(","):value;if(values.includes(allOption.value)&&hasAllOption)return onChange([]);onChange(values)},label:"rockets"===labelVariant?"":label,fullWidth,size,variant,value,multiple:!0,renderValue:selected=>isChips?placeholder||label:0===selected?.length&&hasAllOption?allOption.label:renderValues(selected),displayEmpty:hasAllOption||"rockets"===labelVariant,name,required,hiddenLabel:"rockets"===labelVariant,...rest},finalOptions?.map((opt=>{const{value:val,label}=opt,checked=value?.includes(val);return react.createElement(MenuItem.A,{key:val,value:val,className:"Rockets-MultiSelect-MenuItem"},react.createElement(Checkbox.A,{checked,className:"Rockets-MultiSelect-MenuItem-Checkbox"}),react.createElement(ListItemText.A,{primary:label,className:"Rockets-MultiSelect-ListItemText"}))}))),isChips&&react.createElement(Box.A,null,renderValues())))};MultiSelect.__docgenInfo={description:"",methods:[],displayName:"MultiSelect",props:{options:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  /** The value of the option */\n  value: string;\n  /** The label to display for the option */\n  label: string;\n}",signature:{properties:[{key:"value",value:{name:"string",required:!0},description:"The value of the option"},{key:"label",value:{name:"string",required:!0},description:"The label to display for the option"}]}}],raw:"SelectOption[]"},description:"Array of options to display in the select dropdown",defaultValue:{value:"[]",computed:!1}},defaultValue:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"The default selected value"},hasAllOption:{required:!1,tsType:{name:"boolean"},description:'Whether to include the "All" option in the dropdown. True by default.',defaultValue:{value:"true",computed:!1}},isLoading:{required:!1,tsType:{name:"boolean"},description:"Whether the component is in a loading state",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"value"}],return:{name:"void"}}},description:"Callback function triggered when the selected value changes"},displayVariant:{required:!1,tsType:{name:"union",raw:"'default' | 'chips'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'chips'"}]},description:"Wheter to show the default input display or the chips style",defaultValue:{value:"'default'",computed:!1}},labelVariant:{required:!1,tsType:{name:"union",raw:"'default' | 'rockets'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'rockets'"}]},description:"Wheter to display the default shrinking label or Rockets style, above the field",defaultValue:{value:"'default'",computed:!1}},labelProps:{required:!1,tsType:{name:"TextProps"},description:"Additional properties to pass to the `Text` component used for rendering the label"},variant:{defaultValue:{value:"'outlined'",computed:!1},required:!1}}}},"./packages/react-material-ui/src/components/SelectField/SelectField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>allOption,z:()=>SelectField});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/InputLabel/InputLabel.js"),_mui_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/Select/Select.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),_components_FormFieldSkeleton__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx");const allOption={value:"all",label:"All"},SelectField=({options=[],defaultValue,hasAllOption=!0,isLoading=!1,label,onChange,fullWidth,size,variant="outlined",...rest})=>{const finalOptions=[...hasAllOption?[allOption]:[],...options];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_FormFieldSkeleton__WEBPACK_IMPORTED_MODULE_1__.W,{isLoading,hideLabel:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{fullWidth,size},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,{id:"select-label"},label),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__.A,{labelId:"select-label",defaultValue:defaultValue??(hasAllOption&&allOption.value),onChange:event=>{const value=event.target.value;onChange((value=>value===allOption.value?null:value)(value))},label,fullWidth,size,variant,...rest},finalOptions?.map((role=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.A,{key:role.value,value:role.value},role.label)))))))};SelectField.__docgenInfo={description:"The SelectField component is a form control that allows users to select\nan option from a dropdown menu. It supports features such as custom labels,\nloading state, the inclusion of an \"All\" option, and various MUI Select props.\nIt's props extend from [Material UI's Select](https://mui.com/material-ui/api/select/#props) component props, so every\nprop is interchangeable between those two.\n\n@see [Storybook - SelectField](https://storybook.rockets.tools/?path=/docs/selectfield)\n\n@example\n```tsx\n<SelectField\n  options={[\n    { value: 'option1', label: 'Option 1' },\n    { value: 'option2', label: 'Option 2' },\n    { value: 'option3', label: 'Option 3' },\n  ]}\n  defaultValue=\"option1\"\n  hasAllOption={true}\n  onChange={(value) => console.log(value)}\n/>\n```\n\n@param props - SelectField component props",methods:[],displayName:"SelectField",props:{options:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  /** The value of the option */\n  value: string;\n  /** The label to display for the option */\n  label: string;\n}",signature:{properties:[{key:"value",value:{name:"string",required:!0},description:"The value of the option"},{key:"label",value:{name:"string",required:!0},description:"The label to display for the option"}]}}],raw:"SelectOption[]"},description:"Array of options to display in the select dropdown",defaultValue:{value:"[]",computed:!1}},defaultValue:{required:!0,tsType:{name:"string"},description:"The default selected value"},hasAllOption:{required:!1,tsType:{name:"boolean"},description:'Whether to include the "All" option in the dropdown. True by default.',defaultValue:{value:"true",computed:!1}},isLoading:{required:!1,tsType:{name:"boolean"},description:"Whether the component is in a loading state",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string | string[] | null) => void",signature:{arguments:[{type:{name:"union",raw:"string | string[] | null",elements:[{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"null"}]},name:"value"}],return:{name:"void"}}},description:"Callback function triggered when the selected value changes"},variant:{defaultValue:{value:"'outlined'",computed:!1},required:!1}}}},"./packages/react-material-ui/src/components/Text/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Text_Text});var react=__webpack_require__("./node_modules/react/index.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js");const Text=typographyProps=>{const{children,fontWeight="300"}=typographyProps;return react.createElement(Typography.A,{fontWeight,...typographyProps},children)},Text_Text=Text;Text.__docgenInfo={description:"The Text component is a wrapper around the Material-UI Typography component\nwith a default fontWeight of 300. It's props extend from [Material UI's Typography](https://mui.com/material-ui/api/Typography/#props)\ncomponent props, so every prop is interchangeable between those two.\n\n@see {@link [MUI Typography Component](https://mui.com/material-ui/react-typography/)}\n@see [Storybook - Text](https://storybook.rockets.tools/?path=/docs/text)\n\n@example\n```tsx\n<Text variant=\"h6\" fontWeight=\"400\" fontSize='18px'>\n  Sample Text\n</Text>\n```\n\n@param typographyProps - MUI {@link [TypographyProps](https://mui.com/material-ui/api/Typography/#props)}",methods:[],displayName:"Text"}}}]);