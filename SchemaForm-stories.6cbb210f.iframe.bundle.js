"use strict";(self.webpackChunkroot=self.webpackChunkroot||[]).push([[552],{"./stories/SchemaForm.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AdvancedProperties:()=>AdvancedProperties,CustomSubmitButton:()=>CustomSubmitButton,CustomTemplatesAndWidgets:()=>CustomTemplatesAndWidgets,CustomTitle:()=>CustomTitle,CustomValidator:()=>CustomValidator,Default:()=>Default,InitialFormData:()=>InitialFormData,ReadOnlyFields:()=>ReadOnlyFields,UISchema:()=>UISchema,ValidationErrors:()=>ValidationErrors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SchemaForm_stories});var react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),dist=__webpack_require__("./packages/react-material-ui/dist/index.js"),lib=__webpack_require__("./node_modules/@rjsf/utils/lib/index.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),AddCircleOutline=__webpack_require__("./node_modules/@mui/icons-material/AddCircleOutline.js"),DeleteOutline=__webpack_require__("./node_modules/@mui/icons-material/DeleteOutline.js");const ArrayFieldActionButton=props=>{const{type,onClick}=props;return react.createElement(Box.A,{sx:{marginTop:3,marginLeft:1}},react.createElement(IconButton.A,{onClick},"add"===type?react.createElement(AddCircleOutline.default,{color:"primary"}):react.createElement(DeleteOutline.default,null)))},CustomWidgets_ArrayFieldActionButton=ArrayFieldActionButton;function ArrayFieldTemplate(props){const{items,canAdd,onAddClick,registry,uiSchema,schema,required,idSchema,title}=props,uiOptions=(0,lib.getUiOptions)(uiSchema),ArrayFieldTitleTemplate=(0,lib.getTemplate)("ArrayFieldTitleTemplate",registry,uiOptions);return react.createElement(Box.A,{display:"flex",flexDirection:"column",sx:{"& .MuiGrid-container":{marginTop:"0 !important"},"& .field":{flex:1}}},react.createElement(ArrayFieldTitleTemplate,{idSchema,title:uiOptions.title??title,schema,uiSchema,required,registry}),items.map(((el,i)=>{const child={...el.children,props:{...el.children.props,required:props.required}};return react.createElement(Box.A,{key:el.key,display:"flex",mt:2},child,0===i&&canAdd&&react.createElement(CustomWidgets_ArrayFieldActionButton,{type:"add",onClick:onAddClick}),i>0&&el.hasRemove&&react.createElement(CustomWidgets_ArrayFieldActionButton,{type:"remove",onClick:()=>{el.onDropIndexClick(i)()}}))})),schema.description&&react.createElement(Typography.A,{component:"span",variant:"caption",color:"#9CA3AF"},schema.description))}ArrayFieldActionButton.__docgenInfo={description:"",methods:[],displayName:"ArrayFieldActionButton",props:{type:{required:!0,tsType:{name:"union",raw:"'add' | 'remove'",elements:[{name:"literal",value:"'add'"},{name:"literal",value:"'remove'"}]},description:""},onClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const CustomWidgets_ArrayFieldTemplate=ArrayFieldTemplate;ArrayFieldTemplate.__docgenInfo={description:"",methods:[],displayName:"ArrayFieldTemplate"};var Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),FormGroup=__webpack_require__("./node_modules/@mui/material/FormGroup/FormGroup.js"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js");const Text=typographyProps=>{const{children,fontWeight="300"}=typographyProps;return react.createElement(Typography.A,{fontWeight,...typographyProps},children)},Text_Text=Text;Text.__docgenInfo={description:"The Text component is a wrapper around the Material-UI Typography component\nwith a default fontWeight of 300. It's props extend from [Material UI's Typography](https://mui.com/material-ui/api/Typography/#props)\ncomponent props, so every prop is interchangeable between those two.\n\n@see {@link [MUI Typography Component](https://mui.com/material-ui/react-typography/)}\n@see [Storybook - Text](https://storybook.rockets.tools/?path=/docs/text)\n\n@example\n```tsx\n<Text variant=\"h6\" fontWeight=\"400\" fontSize='18px'>\n  Sample Text\n</Text>\n```\n\n@param typographyProps - MUI {@link [TypographyProps](https://mui.com/material-ui/api/Typography/#props)}",methods:[],displayName:"Text"};const Checkbox_Checkbox=props=>{const{label,checked,required,textProps={fontSize:16,fontWeight:400,color:"text.primary"},...otherProps}=props;return react.createElement(react.Fragment,null,label?react.createElement(FormGroup.A,null,react.createElement(FormControlLabel.A,{control:react.createElement(Checkbox.A,otherProps),label:react.createElement(Text_Text,{role:"label",...textProps},label,required&&" *"),checked})):react.createElement(Checkbox.A,{checked,required,...otherProps}))};Checkbox_Checkbox.__docgenInfo={description:"The Checkbox component is a UI element that renders a Material-UI Checkbox\nwith optional label and customizable label styling. It supports all standard\ncheckbox properties along with additional features like label customization.\nIt's props extend from [Material UI's Checkbox](https://mui.com/material-ui/api/checkbox/#props) component props, so every\nprop is interchangeable between those two.\n\n@see [Storybook - Checkbox](https://storybook.rockets.tools/?path=/docs/checkbox)\n\n@example\n```tsx\n<Checkbox\n  label=\"Accept Terms\"\n  checked={true}\n  required={true}\n  textProps={{\n    fontSize: 14,\n    fontWeight: 500,\n    color: 'text.secondary'\n  }}\n/>\n```\n\n@param CheckboxProps - Checkbox component props\n@param MuiCheckboxProps - MUI {@link [MuiCheckboxProps](https://mui.com/material-ui/api/checkbox/#props)}",methods:[],displayName:"Checkbox",props:{label:{required:!1,tsType:{name:"string"},description:"Label text associated with the checkbox"},textProps:{required:!1,tsType:{name:"TextProps"},description:"Custom styles for the label text. This prop is passed down to the `Text` component."}}};const CustomCheckboxWidget=props=>react.createElement(Checkbox_Checkbox,{checked:props.value,label:props.label,onChange:evt=>props.onChange(evt.target.checked)});CustomCheckboxWidget.__docgenInfo={description:"",methods:[],displayName:"CustomCheckboxWidget"};var FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),Divider=__webpack_require__("./node_modules/@mui/material/Divider/Divider.js"),Grid=__webpack_require__("./node_modules/@mui/material/Grid/Grid.js");const CustomCheckboxesWidget=props=>{const{label,uiSchema,id,disabled,options,value,autofocus,readonly,required,onChange}=props,{enumOptions,enumDisabled}=options,_onChange=option=>({target:{checked}})=>{const all=enumOptions.map((({value})=>value));onChange(checked?((value,selected,all)=>{const at=all.indexOf(value);return selected.slice(0,at).concat(value,selected.slice(at)).sort(((a,b)=>all.indexOf(a)>all.indexOf(b))).filter((item=>""!==item))})(option.value,value,all):((value,selected)=>selected.filter((v=>v!==value)))(option.value,value))};return react.createElement(FormControl.A,null,react.createElement(Box.A,{id,my:1},react.createElement(Typography.A,{variant:"h5"},label),react.createElement(Divider.A,null)),react.createElement(Grid.Ay,{display:"flex",flexDirection:uiSchema?.["ui:inline"]?"row":"column",flexWrap:"wrap",py:2},enumOptions.map(((option,index)=>{const checked=-1!==value.indexOf(option.value),itemDisabled=enumDisabled&&-1!=enumDisabled.indexOf(option.value);return react.createElement(Checkbox_Checkbox,{id:`${id}_${index}`,checked,disabled:disabled||itemDisabled||readonly,autoFocus:autofocus&&0===index,onChange:_onChange(option),key:index,label:option.label,required})}))))};CustomCheckboxesWidget.__docgenInfo={description:"",methods:[],displayName:"CustomCheckboxesWidget"};var TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),FormLabel=__webpack_require__("./node_modules/@mui/material/FormLabel/FormLabel.js");const TEXT_INITIAL_PROPS={fontSize:14,fontWeight:500,color:"text.primary"},FormLabel_FormLabel=props=>{const{id,name,labelProps,label,required}=props;return react.createElement(FormLabel.A,{id,htmlFor:name,sx:{width:"100%"}},react.createElement(Text_Text,{textAlign:"left",...TEXT_INITIAL_PROPS,...labelProps},label&&`${label}${required?" *":""}`))};FormLabel_FormLabel.__docgenInfo={description:'The FormLabel component is used to render a label for form elements.\nIt connects the label to the form element using the `htmlFor` attribute.\n\n@see [Storybook - FormLabel](https://storybook.rockets.tools/?path=/docs/formlabel)\n\n@example\n```tsx\n<FormLabel\n  id="username-label"\n  name="username"\n  label="Username"\n  required={true}\n  labelProps={{ color: \'primary.main\', fontSize: 16 }}\n/>\n```\n\n@param FormLabelProps - FormLabel component props',methods:[],displayName:"FormLabel",props:{id:{required:!1,tsType:{name:"string"},description:"Unique identifier for the label element"},name:{required:!1,tsType:{name:"string"},description:"Name attribute for the associated input element"},label:{required:!1,tsType:{name:"string"},description:"The text to display as the form label"},required:{required:!1,tsType:{name:"boolean"},description:"Whether the associated field is required, appends an asterisk to the label if true"},labelProps:{required:!1,tsType:{name:"TextProps"},description:"Additional properties to pass to the `Text` component used for rendering the label"}}};const Select=props=>{const{id,label,size,value,containerProps,labelProps,options,onChange,required,disabled,error,helperText,name}=props,labelId=`label-${name}`;return react.createElement(Box.A,containerProps,react.createElement(FormControl.A,{fullWidth:!0},label&&"string"==typeof label?react.createElement(FormLabel_FormLabel,{id:labelId,name,label,required,labelProps}):label,react.createElement(TextField.A,{id,select:!0,name,value,disabled,size:size||"small",error,helperText,onChange,sx:{marginTop:.5,width:"100%"},hiddenLabel:!0,label:"","aria-labelledby":labelId,"data-testid":"select"},options.map((({value,label},i)=>react.createElement(MenuItem.A,{key:i,value,disabled},label))))))},Select_Select=Select;Select.__docgenInfo={description:"",methods:[],displayName:"Select",props:{containerProps:{required:!1,tsType:{name:"BoxProps"},description:""},labelProps:{required:!1,tsType:{name:"TextProps"},description:""},options:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  value: string | number;\n  disabled?: boolean;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!0}},{key:"disabled",value:{name:"boolean",required:!1}}]}}],raw:"SelectOptions[]"},description:""}}};const CustomSelectWidget=({id,options,label,required,disabled,readonly,value,multiple,onChange,rawErrors=[]})=>{const{enumOptions,enumDisabled}=options,emptyValue=multiple?[]:"";return react.createElement(Select_Select,{id,label,value:void 0===value?emptyValue:value,options:enumOptions?.map((({value,label})=>({value,label,disabled:enumDisabled&&-1!=enumDisabled.indexOf(value)}))),onChange:({target:{value}})=>onChange(value),required,disabled:disabled||readonly,error:rawErrors.length>0})};CustomSelectWidget.__docgenInfo={description:"",methods:[],displayName:"CustomSelectWidget",props:{rawErrors:{defaultValue:{value:"[]",computed:!1},required:!1}}};var Switch=__webpack_require__("./node_modules/@mui/material/Switch/Switch.js");const Switch_Switch=props=>{const{label,disabled,checked,onChange,required,textProps={fontSize:16,fontWeight:400,color:"text.primary"}}=props;return react.createElement(react.Fragment,null,label?react.createElement(FormGroup.A,null,react.createElement(FormControlLabel.A,{disabled,control:react.createElement(Switch.A,{onChange}),label:react.createElement(Text_Text,textProps,label,required&&" *"),checked})):react.createElement(Switch.A,props))};Switch_Switch.__docgenInfo={description:'The `Switch` component is a UI element used to toggle between two states,\ntypically representing "on" and "off". It supports features such as labeling,\ncustom label styling, and controlled or uncontrolled state management.\nIt\'s props extend from [Material UI\'s Switch](https://mui.com/material-ui/api/switch/#props) component props, so every\nprop is interchangeable between those two.\n\n@see [Storybook - Switch](https://storybook.rockets.tools/?path=/docs/switch)\n\n@example\n```tsx\n<Switch\n  label="Enable Notifications"\n  checked={true}\n  onChange={(e) => console.log(e.target.checked)}\n  textProps={{ fontSize: 14, color: \'primary.main\' }}\n/>\n```\n\n@param SwitchProps - The props for the `Switch` component.\n@param MuiSwitchProps - MUI {@link [MuiSwitchProps](https://mui.com/material-ui/api/switch/#props)}',methods:[],displayName:"Switch",props:{label:{required:!1,tsType:{name:"string"},description:"The label text displayed alongside the switch."},textProps:{required:!1,tsType:{name:"TextProps"},description:"Custom styles for the label text. This prop is passed down to the `Text` component."}}};const CustomSwitchWidget=props=>react.createElement(Switch_Switch,{checked:props.value,label:props.label,onChange:evt=>props.onChange(evt.target.checked)});CustomSwitchWidget.__docgenInfo={description:"",methods:[],displayName:"CustomSwitchWidget"};var OutlinedInput=__webpack_require__("./node_modules/@mui/material/OutlinedInput/OutlinedInput.js"),InputAdornment=__webpack_require__("./node_modules/@mui/material/InputAdornment/InputAdornment.js"),Visibility=__webpack_require__("./node_modules/@mui/icons-material/Visibility.js"),VisibilityOff=__webpack_require__("./node_modules/@mui/icons-material/VisibilityOff.js");const VARIANT_COLOR_MAPPING={veryWeak:"lightgray",weak:"red",medium:"yellow",great:"green"};var PasswordStrengthBarVariants;!function(PasswordStrengthBarVariants){PasswordStrengthBarVariants.VeryWeak="veryWeak",PasswordStrengthBarVariants.Weak="weak",PasswordStrengthBarVariants.Medium="medium",PasswordStrengthBarVariants.Great="great"}(PasswordStrengthBarVariants||(PasswordStrengthBarVariants={}));const PasswordStrengthBar=({variant="veryWeak"})=>react.createElement(Box.A,{sx:{height:"4px",background:VARIANT_COLOR_MAPPING[variant],borderRadius:1,width:"100%"}}),TextField_PasswordStrengthBar=PasswordStrengthBar;PasswordStrengthBar.__docgenInfo={description:"",methods:[],displayName:"PasswordStrengthBar",props:{variant:{required:!1,tsType:{name:"PasswordStrengthBarVariants"},description:"",defaultValue:{value:"PasswordStrengthBarVariants.VeryWeak",computed:!0}}}};const LENGTH_REGEX=new RegExp(/.{8,}$/),UPPERCASE_REGEX=new RegExp(/.*[A-Z]/),LOWERCASE_REGEX=new RegExp(/.*[a-z]/),NUMBER_REGEX=new RegExp(/.*\d/),SPECIAL_CHARS_REGEX=new RegExp(/.*[!@#$%^&*()_+\-=\\[\]{};':"\\|,.<>\\/?]/),PASSWORD_MATCH_RULES={text:["Very weak","Weak","Medium","Great"],score:[0,2,3,5]},constants_PASSWORD_DEFAULT_RULES=[{label:"8 characters",pattern:LENGTH_REGEX},{label:"1 Alpha Upper character",pattern:UPPERCASE_REGEX},{label:"1 Alpha Lower character",pattern:LOWERCASE_REGEX},{label:"1 Numeric character",pattern:NUMBER_REGEX},{label:'1 Special character (Example: "@", "#", "*")',pattern:SPECIAL_CHARS_REGEX}],getPasswordScore=(password,rules)=>rules.filter((rule=>password?.match?.(rule.pattern))).length;var FormHelperText=__webpack_require__("./node_modules/@mui/material/FormHelperText/FormHelperText.js");const PasswordStrengthRules=({name,value,rules,renderRulesText})=>renderRulesText?react.createElement(react.Fragment,null,renderRulesText(name,value,rules)):react.createElement(Box.A,{mt:2},react.createElement(FormHelperText.A,{sx:theme=>({color:theme.palette.common.black})},"Password should contain at least:"),rules?.map((rule=>react.createElement(FormHelperText.A,{id:name,sx:theme=>({color:value&&value?.match(rule.pattern)?theme.palette.success.main:theme.palette.common.black})},rule.label)))),TextField_PasswordStrengthRules=PasswordStrengthRules;PasswordStrengthRules.__docgenInfo={description:"",methods:[],displayName:"PasswordStrengthRules",props:{name:{required:!0,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"unknown"},description:""},rules:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  pattern: RegExp;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"pattern",value:{name:"RegExp",required:!0}}]}}],raw:"PasswordRule[]"},description:""},renderRulesText:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  name: string,\n  value: string,\n  rules: PasswordRule[],\n) => ReactNode",signature:{arguments:[{type:{name:"string"},name:"name"},{type:{name:"string"},name:"value"},{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  pattern: RegExp;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"pattern",value:{name:"RegExp",required:!0}}]}}],raw:"PasswordRule[]"},name:"rules"}],return:{name:"ReactNode"}}},description:""}}};const PasswordStrength=({passwordRuleVariant,passwordStrengthText,renderStrengthBar})=>renderStrengthBar?react.createElement(react.Fragment,null,renderStrengthBar(passwordRuleVariant,passwordStrengthText)):react.createElement(Box.A,{mt:1},react.createElement(Box.A,{display:"flex",gap:2},[...Array(4)].map(((_,index)=>react.createElement(TextField_PasswordStrengthBar,{key:`password-bar-${index}`,variant:passwordRuleVariant})))),react.createElement(Typography.A,{textAlign:"end",color:"grey.400",variant:"subtitle2",mt:.5},passwordStrengthText)),TextField_PasswordStrength=PasswordStrength;PasswordStrength.__docgenInfo={description:"",methods:[],displayName:"PasswordStrength",props:{passwordRuleVariant:{required:!0,tsType:{name:"PasswordStrengthBarVariants"},description:""},passwordStrengthText:{required:!0,tsType:{name:"string"},description:""},renderStrengthBar:{required:!1,tsType:{name:"signature",type:"function",raw:"(\n  variant: PasswordStrengthBarVariants,\n  text: string,\n) => ReactNode",signature:{arguments:[{type:{name:"PasswordStrengthBarVariants"},name:"variant"},{type:{name:"string"},name:"text"}],return:{name:"ReactNode"}}},description:""}}};const TextField_TextField=props=>{const{label,required,sx,type,size,value,hiddenLabel,options,containerProps,labelProps,InputProps,InputLabelProps,name,passwordStrengthConfig,...rest}=props,passwordStrengthConfigDefault={hideStrengthBar:passwordStrengthConfig?.hideStrengthBar??!0,hideRulesText:passwordStrengthConfig?.hideRulesText??!0,rules:passwordStrengthConfig?.rules??constants_PASSWORD_DEFAULT_RULES,matchRules:passwordStrengthConfig?.matchRules??PASSWORD_MATCH_RULES,renderStrengthBar:passwordStrengthConfig?.renderStrengthBar,renderRulesText:passwordStrengthConfig?.renderRulesText},[showPassword,setShowPassword]=(0,react.useState)(!1),isPassword="password"===type,ishiddenLabel=hiddenLabel||options?.hiddenLabel,passwordScore=getPasswordScore(value,passwordStrengthConfigDefault.rules),[passwordStrengthText,passwordRuleVariant]=((score,matchRules)=>{const variants=Object.values(PasswordStrengthBarVariants);if(0===score)return[matchRules.text[0],variants[0]];const scoreIndex=matchRules.score.findIndex(((item,index)=>item>=score||score<matchRules.score?.[index+1]));return scoreIndex===matchRules.score.length?[matchRules.text[matchRules.text.length-1],variants[matchRules.text.length-1]]:[matchRules.text[scoreIndex],variants[scoreIndex]]})(passwordScore,passwordStrengthConfigDefault.matchRules);return react.createElement(Box.A,containerProps,react.createElement(FormControl.A,{hiddenLabel:!!label||ishiddenLabel,fullWidth:!0},!ishiddenLabel&&!!label&&"string"==typeof label&&react.createElement(FormLabel_FormLabel,{name,label,required,labelProps,...InputLabelProps}),!ishiddenLabel&&!!label&&"string"!=typeof label&&label,react.createElement(OutlinedInput.A,{...rest,sx:[{marginTop:.5,mb:0,input:{color:"text.primary"}},...Array.isArray(sx)?sx:[sx]],id:name,name,size:size||"small",value:value||0===value?value:"",type:isPassword?showPassword?"text":"password":type,endAdornment:isPassword&&react.createElement(InputAdornment.A,{position:"end"},react.createElement(IconButton.A,{"aria-label":"toggle password visibility",onClick:()=>{setShowPassword((prv=>!prv))},onMouseDown:event=>{event.preventDefault()},"data-testid":"toggle-password-button"},showPassword?react.createElement(Visibility.default,null):react.createElement(VisibilityOff.default,null))),"data-testid":"text-field",fullWidth:!0,...InputProps})),isPassword&&react.createElement(react.Fragment,null,!passwordStrengthConfigDefault.hideStrengthBar&&react.createElement(TextField_PasswordStrength,{passwordRuleVariant,passwordStrengthText,renderStrengthBar:passwordStrengthConfigDefault.renderStrengthBar}),!passwordStrengthConfigDefault.hideRulesText&&react.createElement(TextField_PasswordStrengthRules,{name,value,rules:passwordStrengthConfigDefault.rules,renderRulesText:passwordStrengthConfigDefault.renderRulesText})))};TextField_TextField.__docgenInfo={description:'TextField component for inputting text with support for password strength\nevaluation and visibility toggle. Integrates with MUI TextField and supports\ncustom rendering for password strength and rules. It\'s props extend from [Material UI\'s TextField](https://mui.com/material-ui/api/text-field/#props)\ncomponent props, so every prop is interchangeable between those two.\n\n@see [Storybook - TextField](https://storybook.rockets.tools/?path=/docs/textfield)\n\n@example\n```tsx\n<TextField\n  label="Password"\n  type="password"\n  passwordStrengthConfig={{\n    hideStrengthBar: false,\n    hideRulesText: false,\n  }}\n/>\n```\n\n@param props - Properties to customize the TextField component',methods:[],displayName:"TextField",props:{containerProps:{required:!1,tsType:{name:"BoxProps"},description:"Props for the container Box"},labelProps:{required:!1,tsType:{name:"TypographyProps"},description:"Props for the label Typography"},options:{required:!1,tsType:{name:"TextAreaProps"},description:"Options for the TextArea"},passwordStrengthConfig:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  /** Hides the text displaying password rules */\n  hideRulesText?: boolean;\n  /** Hides the password strength bar */\n  hideStrengthBar?: boolean;\n  /** List of password rules to be applied */\n  rules?: PasswordRule[];\n  /** Rules for matching password strength */\n  matchRules?: {\n    /** List of match rule texts */\n    text: string[];\n    /** Corresponding scores for the match rules */\n    score: number[];\n  };\n  /** Custom renderer for the strength bar */\n  renderStrengthBar?: (\n    variant: PasswordStrengthBarVariants,\n    text: string,\n  ) => ReactNode;\n  /** Custom renderer for the rules text */\n  renderRulesText?: (\n    name: string,\n    value: string,\n    rules: PasswordRule[],\n  ) => ReactNode;\n}",signature:{properties:[{key:"hideRulesText",value:{name:"boolean",required:!1},description:"Hides the text displaying password rules"},{key:"hideStrengthBar",value:{name:"boolean",required:!1},description:"Hides the password strength bar"},{key:"rules",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  pattern: RegExp;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"pattern",value:{name:"RegExp",required:!0}}]}}],raw:"PasswordRule[]",required:!1},description:"List of password rules to be applied"},{key:"matchRules",value:{name:"signature",type:"object",raw:"{\n  /** List of match rule texts */\n  text: string[];\n  /** Corresponding scores for the match rules */\n  score: number[];\n}",signature:{properties:[{key:"text",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0},description:"List of match rule texts"},{key:"score",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!0},description:"Corresponding scores for the match rules"}]},required:!1},description:"Rules for matching password strength"},{key:"renderStrengthBar",value:{name:"signature",type:"function",raw:"(\n  variant: PasswordStrengthBarVariants,\n  text: string,\n) => ReactNode",signature:{arguments:[{type:{name:"PasswordStrengthBarVariants"},name:"variant"},{type:{name:"string"},name:"text"}],return:{name:"ReactNode"}},required:!1},description:"Custom renderer for the strength bar"},{key:"renderRulesText",value:{name:"signature",type:"function",raw:"(\n  name: string,\n  value: string,\n  rules: PasswordRule[],\n) => ReactNode",signature:{arguments:[{type:{name:"string"},name:"name"},{type:{name:"string"},name:"value"},{type:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  pattern: RegExp;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"pattern",value:{name:"RegExp",required:!0}}]}}],raw:"PasswordRule[]"},name:"rules"}],return:{name:"ReactNode"}},required:!1},description:"Custom renderer for the rules text"}]}},description:"Configuration for password strength display"}}};const TYPES_THAT_SHRINK_LABEL=["date","datetime-local","file","time"];function CustomTextFieldWidget(props){const{id,name,placeholder,required,readonly,disabled,type,label,hideLabel,value,onChange,onChangeOverride,onBlur,onFocus,autofocus,options,schema,uiSchema,rawErrors=[],formContext,registry,InputLabelProps,...textFieldProps}=props,inputProps=(0,lib.getInputProps)(schema,type,options),{step,min,max,...rest}=inputProps,otherProps={inputProps:{step,min,max,...schema.examples?{list:(0,lib.examplesId)(id)}:void 0},...rest},formatData=uiSchema?.["ui:formatter"],DisplayInputLabelProps=TYPES_THAT_SHRINK_LABEL.includes(type)?{...InputLabelProps,shrink:!0}:InputLabelProps;return react.createElement(react.Fragment,null,react.createElement(TextField_TextField,{id,name:id,placeholder,label:(0,lib.labelValue)(label||void 0,hideLabel,!1),autoFocus:autofocus,required,disabled:disabled||readonly,...otherProps,value:value||0===value?value:"",error:rawErrors.length>0,onChange:onChangeOverride||(({target:{value}})=>onChange(""===value?options.emptyValue:formatData?formatData(value):value)),onBlur:({target:{value}})=>onBlur(id,value),onFocus:({target:{value}})=>onFocus(id,value),InputLabelProps:DisplayInputLabelProps,...textFieldProps,"aria-describedby":(0,lib.ariaDescribedByIds)(id,!!schema.examples)}),Array.isArray(schema.examples)&&react.createElement("datalist",{id:(0,lib.examplesId)(id)},schema.examples.concat(schema.default&&!schema.examples.includes(schema.default)?[schema.default]:[]).map((example=>react.createElement("option",{key:example,value:example})))))}CustomTextFieldWidget.__docgenInfo={description:"The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\nIt is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\nIt can be customized/overridden for other themes or individual implementations as needed.\n\n@param props - The `WidgetProps` for this template\n@returns - React component",methods:[],displayName:"CustomTextFieldWidget"};const CustomEmailFieldWidget=props=>react.createElement(CustomTextFieldWidget,{...props,type:"email"});CustomEmailFieldWidget.__docgenInfo={description:"",methods:[],displayName:"CustomEmailFieldWidget"};const CustomPasswordFieldWidget=props=>{const{uiSchema}=props,passwordStrengthConfig=uiSchema?.["ui:passwordStrengthConfig"];return react.createElement(CustomTextFieldWidget,{...props,uiSchema,passwordStrengthConfig,type:"password"})},CustomWidgets_CustomPasswordFieldWidget=CustomPasswordFieldWidget;CustomPasswordFieldWidget.__docgenInfo={description:"",methods:[],displayName:"CustomPasswordFieldWidget"};var RadioGroup=__webpack_require__("./node_modules/@mui/material/RadioGroup/RadioGroup.js"),Radio=__webpack_require__("./node_modules/@mui/material/Radio/Radio.js");const RadioGroup_RadioGroup=props=>{const{id,name,containerProps,labelProps,options,label,required,row,value,onChange,disabled}=props;return react.createElement(Box.A,containerProps,react.createElement(FormControl.A,null,label&&react.createElement(FormLabel_FormLabel,{name,label,required,labelProps}),react.createElement(RadioGroup.A,{id,value:`${value}`,row,onChange},options.map(((option,i)=>react.createElement(FormControlLabel.A,{control:react.createElement(Radio.A,{name:`${id}-${i}`,color:"primary",key:i}),label:`${option.label}`,value:`${option.value}`,key:i,disabled:disabled||option.disabled}))))))};RadioGroup_RadioGroup.__docgenInfo={description:"The `Radio` component renders a group of radio buttons with various configuration\noptions, including labels, custom styles, and disabled states. It utilizes Material-UI components\nfor structure and styling.\n\n @see [Storybook - RadioGroup](https://storybook.rockets.tools/?path=/docs/radiogroup)\n\n@example\n```tsx\n<Radio\n  id=\"example-radio-group\"\n  name=\"exampleRadios\"\n  label=\"Select an option\"\n  required={true}\n  row={true}\n  value=\"2\"\n  options={[\n    { label: 'Option 1', value: '1' },\n    { label: 'Option 2', value: '2' },\n    { label: 'Option 3', value: '3', disabled: true },\n  ]}\n  onChange={(e) => console.log(e.target.value)}\n/>\n```\n\n@param props - Props for the `RadioGroup` component",methods:[],displayName:"RadioGroup",props:{options:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  /** Label displayed next to the radio button */\n  label: string;\n  /** Value associated with the radio button */\n  value: unknown;\n  /** Whether the radio option is disabled */\n  disabled?: boolean;\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0},description:"Label displayed next to the radio button"},{key:"value",value:{name:"unknown",required:!0},description:"Value associated with the radio button"},{key:"disabled",value:{name:"boolean",required:!1},description:"Whether the radio option is disabled"}]}}],raw:"RadioOptions[]"},description:"Array of radio options to display"},label:{required:!1,tsType:{name:"string"},description:"Label for the radio group"},required:{required:!1,tsType:{name:"boolean"},description:"Marks the radio group as required"},row:{required:!1,tsType:{name:"boolean"},description:"Displays radio buttons in a row if set to true"},disabled:{required:!1,tsType:{name:"boolean"},description:"Disables all radio buttons in the group if set to true"},containerProps:{required:!1,tsType:{name:"BoxProps"},description:"Props to customize the container `Box` component"},labelProps:{required:!1,tsType:{name:"TextProps"},description:"Props to customize the `FormLabel` component"}}};const CustomRadioWidget=props=>{const{id,schema,options,value,required,disabled,label,onChange}=props,{enumOptions}=options,row=!!options&&options.inline;return react.createElement(RadioGroup_RadioGroup,{id,options:enumOptions,onChange:(_,value)=>{onChange("boolean"==schema.type?"false"!==value:value)},row,value,disabled,required,label})};CustomRadioWidget.__docgenInfo={description:"",methods:[],displayName:"CustomRadioWidget"};__webpack_require__("./node_modules/@mui/material/Autocomplete/Autocomplete.js"),__webpack_require__("./node_modules/@mui/material/useAutocomplete/useAutocomplete.js"),__webpack_require__("./packages/react-data-provider/dist/index.js"),__webpack_require__("./packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx"),__webpack_require__("./packages/react-material-ui/src/components/SelectField/SelectField.tsx");const OtpInput_NUMBER_REGEX=/^\d$/,KEYBOARD_KEYS_LEFT="ArrowLeft",KEYBOARD_KEYS_RIGHT="ArrowRight",KEYBOARD_KEYS_BACKSPACE="Backspace",KEYBOARD_KEYS_HOME="Home",KEYBOARD_KEYS_END="End",OtpInput=react.forwardRef((({value="",length=4,autoFocus=!1,textFieldProps,name,label,labelProps,className,onComplete,onChange,onBlur,...restBoxProps},ref)=>{const checkCompletion=inputValue=>inputValue.slice(0,length).length===length,inputData=Array.from({length},((_,index)=>({character:value[index]??"",inputRef:react.createRef()}))),updateValue=(index,char)=>value.slice(0,index)+char+value.slice(index+1),focusInput=index=>{index<length&&inputData[index]?.inputRef.current?.select()};return react.createElement(Box.A,{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center"},!!label&&react.createElement(FormLabel_FormLabel,{name:`${name}-0`,label,labelProps}),react.createElement(Box.A,{display:"flex",gap:"20px",alignItems:"center",justifyContent:"center",ref,className:`otp-input-box ${className||""}`,...restBoxProps},inputData.map((({character,inputRef},index)=>{const{onPaste,onFocus,onKeyDown,className,onBlur:textFieldBlur,error,name,...restTextFieldProps}="function"==typeof textFieldProps?textFieldProps(index)||{}:textFieldProps||{};return react.createElement(TextField_TextField,{id:0===index?`${name}-${index}`:void 0,key:`otp-input-${index}`,autoFocus:autoFocus&&0===index,autoComplete:"one-time-code",value:character,error,inputRef,inputProps:{sx:{textAlign:"center"}},InputProps:{sx:{caretColor:"transparent",".MuiInputBase-input::selection":{backgroundColor:"transparent"}}},className,onPaste:event=>{event.preventDefault(),((event,index)=>{const pastedData=event.clipboardData.getData("text/plain"),newValue=pastedData.length<=length-index?value.slice(0,index)+pastedData+value.slice(index+pastedData.length,length):value;onChange?.(newValue),checkCompletion(newValue)?(onComplete?.(newValue),focusInput(length-1)):focusInput(newValue.length)})(event,index),onPaste?.(event)},onFocus:event=>{event.preventDefault(),event.target.select(),onFocus?.(event)},onChange:event=>((event,index)=>{if(0===index&&event.target.value.length>1){const inputComplete=checkCompletion(event.target.value);return onChange?.(event.target.value),inputComplete&&onComplete?.(event.target.value),void focusInput(event.target.value.length-1)}const char=event.target.value[0]??"";if(char&&!OtpInput_NUMBER_REGEX.test(char))return;const newValue=updateValue(index,char);onChange?.(newValue),""!==char&&OtpInput_NUMBER_REGEX.test(char)?focusInput(newValue.length-1<index?newValue.length:index+1):newValue.length<=index&&focusInput(index-1),checkCompletion(newValue)&&onComplete?.(newValue)})(event,index),onKeyDown:event=>{((event,index)=>{const inputElement=event.target,caretAtStart=0===inputElement.selectionStart&&0===inputElement.selectionEnd;if(inputElement.value===event.key)event.preventDefault(),focusInput(index+1);else if(event.key===KEYBOARD_KEYS_BACKSPACE)if(inputElement.value){if(caretAtStart){event.preventDefault();const newValue=updateValue(index,"");onChange?.(newValue),newValue.length<=index&&focusInput(index-1)}}else event.preventDefault(),focusInput(index-1);else event.key===KEYBOARD_KEYS_LEFT?(event.preventDefault(),focusInput(index-1)):event.key===KEYBOARD_KEYS_RIGHT?(event.preventDefault(),focusInput(index+1)):event.key===KEYBOARD_KEYS_HOME?(event.preventDefault(),focusInput(0)):event.key===KEYBOARD_KEYS_END&&(event.preventDefault(),focusInput(length-1))})(event,index),onKeyDown?.(event)},onBlur:event=>{textFieldBlur?.(event),(event=>{if(!inputData.some((({inputRef})=>inputRef.current===event.relatedTarget))){const isComplete=checkCompletion(value);onBlur?.(value,isComplete)}})(event)},name:`${name}-${index}`,...restTextFieldProps})}))))}));OtpInput.__docgenInfo={description:"",methods:[],displayName:"OtpInput",props:{value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}},length:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"4",computed:!1}},autoFocus:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},textFieldProps:{required:!1,tsType:{name:"union",raw:"| OmittedTextFieldProps\n| ((index: number) => OmittedTextFieldProps)",elements:[{name:"Omit",elements:[{name:"MuiTextFieldProps"},{name:"union",raw:"| 'onChange'\n| 'select'\n| 'multiline'\n| 'defaultValue'\n| 'value'\n| 'autoFocus'\n| 'variant'",elements:[{name:"literal",value:"'onChange'"},{name:"literal",value:"'select'"},{name:"literal",value:"'multiline'"},{name:"literal",value:"'defaultValue'"},{name:"literal",value:"'value'"},{name:"literal",value:"'autoFocus'"},{name:"literal",value:"'variant'"}]}],raw:"Omit<\n  MuiTextFieldProps,\n  | 'onChange'\n  | 'select'\n  | 'multiline'\n  | 'defaultValue'\n  | 'value'\n  | 'autoFocus'\n  | 'variant'\n>"},{name:"unknown"}]},description:""},name:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:""},labelProps:{required:!1,tsType:{name:"TypographyProps"},description:""},onComplete:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, isComplete: boolean) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"boolean"},name:"isComplete"}],return:{name:"void"}}},description:""}}};var validator_ajv6_lib=__webpack_require__("./node_modules/@rjsf/validator-ajv6/lib/index.js");const SchemaForm_stories={component:dist.SchemaForm.Form,tags:["autodocs"],args:{schema:{type:"object",required:["firstName","lastName","email","password"],properties:{name:{type:"string",title:"First name"},email:{type:"string",title:"Email"}}},uiSchema:{email:{"ui:widget":"email"}}},argTypes:{}},Default={args:{schema:{title:"Schema Form",description:"Schema Form example",type:"object",required:["firstName","lastName","email","password"],properties:{firstName:{type:"string",title:"First name"},lastName:{type:"string",title:"Last name"},email:{type:"string",title:"Email"},password:{type:"string",title:"Password",minLength:3}}},uiSchema:{email:{"ui:widget":"email"},password:{"ui:widget":"password"}},validator:validator_ajv6_lib.default}},CustomTitle={args:{schema:{title:"Custom Title",type:"object",required:["firstName","lastName","email","password"],properties:{name:{type:"string",title:"First name"},email:{type:"string",title:"Email"}}}}},CustomSubmitButton={args:{children:react.createElement(Button.A,{type:"submit",variant:"contained",sx:{width:"100%",backgroundColor:"#00ff44"}},"Fire")}},AdvancedProperties={args:{schema:{type:"object",properties:{toggle:{type:"boolean",title:"Toggle Switch"}}},advancedProperties:{toggle:{type:"switch"}}}},InitialFormData={args:{schema:{type:"object",properties:{firstName:{type:"string",title:"First Name"},lastName:{type:"string",title:"Last Name"}}},formData:{firstName:"John",lastName:"Doe"}}},ValidationErrors={args:{schema:{type:"object",required:["firstName","email"],properties:{firstName:{type:"string",title:"First Name"},email:{type:"string",title:"Email",format:"email"}}},uiSchema:{email:{"ui:widget":"email"}}}},CustomValidator={args:{schema:{type:"object",properties:{age:{type:"integer",title:"Age"}}},formData:{age:16},customValidate:(formData,errors)=>(formData.age<18&&errors.age.addError("Age must be at least 18."),errors)}},ReadOnlyFields={args:{schema:{type:"object",properties:{username:{type:"string",title:"Username"}}},uiSchema:{username:{"ui:disabled":!0}},formData:{username:"readonlyuser"}}},UISchema={args:{schema:{type:"object",properties:{age:{type:"integer",title:"Age"},bio:{type:"string",title:"Biography"}}},uiSchema:{age:{"ui:widget":"range"},bio:{"ui:widget":"textarea","ui:options":{rows:5}}}}},CustomTemplatesAndWidgets={args:{schema:{type:"object",properties:{password:{type:"string",title:"Password",minLength:3},address:{type:"array",title:"Address",items:{title:"Address",type:"string"}}}},uiSchema:{password:{"ui:widget":CustomWidgets_CustomPasswordFieldWidget}},templates:{ArrayFieldTemplate:CustomWidgets_ArrayFieldTemplate},formData:{address:[""]}}},__namedExportsOrder=["Default","CustomTitle","CustomSubmitButton","AdvancedProperties","InitialFormData","ValidationErrors","CustomValidator","ReadOnlyFields","UISchema","CustomTemplatesAndWidgets"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      title: 'Schema Form',\n      description: 'Schema Form example',\n      type: 'object',\n      required: ['firstName', 'lastName', 'email', 'password'],\n      properties: {\n        firstName: {\n          type: 'string',\n          title: 'First name'\n        },\n        lastName: {\n          type: 'string',\n          title: 'Last name'\n        },\n        email: {\n          type: 'string',\n          title: 'Email'\n        },\n        password: {\n          type: 'string',\n          title: 'Password',\n          minLength: 3\n        }\n      }\n    },\n    uiSchema: {\n      email: {\n        'ui:widget': 'email'\n      },\n      password: {\n        'ui:widget': 'password'\n      }\n    },\n    validator: validator\n  }\n}",...Default.parameters?.docs?.source}}},CustomTitle.parameters={...CustomTitle.parameters,docs:{...CustomTitle.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      title: 'Custom Title',\n      type: 'object',\n      required: ['firstName', 'lastName', 'email', 'password'],\n      properties: {\n        name: {\n          type: 'string',\n          title: 'First name'\n        },\n        email: {\n          type: 'string',\n          title: 'Email'\n        }\n      }\n    }\n  }\n}",...CustomTitle.parameters?.docs?.source}}},CustomSubmitButton.parameters={...CustomSubmitButton.parameters,docs:{...CustomSubmitButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: <Button type=\"submit\" variant=\"contained\" sx={{\n      width: '100%',\n      backgroundColor: '#00ff44'\n    }}>\n        Fire\n      </Button>\n  }\n}",...CustomSubmitButton.parameters?.docs?.source}}},AdvancedProperties.parameters={...AdvancedProperties.parameters,docs:{...AdvancedProperties.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        toggle: {\n          type: 'boolean',\n          title: 'Toggle Switch'\n        }\n      }\n    },\n    advancedProperties: {\n      toggle: {\n        type: 'switch'\n      }\n    }\n  }\n}",...AdvancedProperties.parameters?.docs?.source}}},InitialFormData.parameters={...InitialFormData.parameters,docs:{...InitialFormData.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        firstName: {\n          type: 'string',\n          title: 'First Name'\n        },\n        lastName: {\n          type: 'string',\n          title: 'Last Name'\n        }\n      }\n    },\n    formData: {\n      firstName: 'John',\n      lastName: 'Doe'\n    }\n  }\n}",...InitialFormData.parameters?.docs?.source}}},ValidationErrors.parameters={...ValidationErrors.parameters,docs:{...ValidationErrors.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      required: ['firstName', 'email'],\n      properties: {\n        firstName: {\n          type: 'string',\n          title: 'First Name'\n        },\n        email: {\n          type: 'string',\n          title: 'Email',\n          format: 'email'\n        }\n      }\n    },\n    uiSchema: {\n      email: {\n        'ui:widget': 'email'\n      }\n    }\n  }\n}",...ValidationErrors.parameters?.docs?.source},description:{story:"Click on the submit button to see the automatic validation errors.",...ValidationErrors.parameters?.docs?.description}}},CustomValidator.parameters={...CustomValidator.parameters,docs:{...CustomValidator.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        age: {\n          type: 'integer',\n          title: 'Age'\n        }\n      }\n    },\n    formData: {\n      age: 16\n    },\n    customValidate: customValidator\n  }\n}",...CustomValidator.parameters?.docs?.source},description:{story:"Click on the submit button to see the custom validator function in action.",...CustomValidator.parameters?.docs?.description}}},ReadOnlyFields.parameters={...ReadOnlyFields.parameters,docs:{...ReadOnlyFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        username: {\n          type: 'string',\n          title: 'Username'\n        }\n      }\n    },\n    uiSchema: {\n      username: {\n        'ui:disabled': true\n      }\n    },\n    formData: {\n      username: 'readonlyuser'\n    }\n  }\n}",...ReadOnlyFields.parameters?.docs?.source}}},UISchema.parameters={...UISchema.parameters,docs:{...UISchema.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        age: {\n          type: 'integer',\n          title: 'Age'\n        },\n        bio: {\n          type: 'string',\n          title: 'Biography'\n        }\n      }\n    },\n    uiSchema: {\n      age: {\n        'ui:widget': 'range'\n      },\n      bio: {\n        'ui:widget': 'textarea',\n        'ui:options': {\n          rows: 5\n        }\n      }\n    }\n  }\n}",...UISchema.parameters?.docs?.source}}},CustomTemplatesAndWidgets.parameters={...CustomTemplatesAndWidgets.parameters,docs:{...CustomTemplatesAndWidgets.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        password: {\n          type: 'string',\n          title: 'Password',\n          minLength: 3\n        },\n        address: {\n          type: 'array',\n          title: 'Address',\n          items: {\n            title: 'Address',\n            type: 'string'\n          }\n        }\n      }\n    },\n    uiSchema: {\n      password: {\n        'ui:widget': CustomPasswordFieldWidget\n      }\n    },\n    templates: {\n      ArrayFieldTemplate\n    },\n    formData: {\n      address: ['']\n    }\n  }\n}",...CustomTemplatesAndWidgets.parameters?.docs?.source},description:{story:"Rockets provides custom templetes and widgets\nto help build advanced forms with better UI.",...CustomTemplatesAndWidgets.parameters?.docs?.description}}}},"./packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>FormFieldSkeleton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Skeleton/Skeleton.js");const FormFieldSkeleton=({isLoading=!0,children,hideLabel})=>{const theme=(0,_mui_material__WEBPACK_IMPORTED_MODULE_1__.A)();return isLoading?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{width:"100%"},!hideLabel&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{variant:"text",width:80,sx:{fontSize:theme.typography.body1.fontSize},"data-testid":"form-field-skeleton-label"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{variant:"rounded",height:42,width:"100%","data-testid":"form-field-skeleton-input"},children)):react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children)};FormFieldSkeleton.__docgenInfo={description:"The FormFieldSkeleton component is used to display a loading skeleton\nfor form fields. It shows a skeleton text area and a skeleton input\narea when the form field is loading. The component supports options\nto hide the label and to toggle loading state.\n\n@see [Storybook - FormFieldSkeleton](https://storybook.rockets.tools/?path=/docs/formfieldskeleton)\n\n@example\n```tsx\n<FormFieldSkeleton isLoading={true} hideLabel={true}>\n  <YourComponent />\n</FormFieldSkeleton>\n```\n\n@param props - FormFieldSkeleton component props\n@returns The skeleton loading component or the children if not loading",methods:[],displayName:"FormFieldSkeleton",props:{isLoading:{required:!1,tsType:{name:"boolean"},description:"Indicates if the form field is loading",defaultValue:{value:"true",computed:!1}},hideLabel:{required:!1,tsType:{name:"boolean"},description:"Hides the label when set to true"}}}},"./packages/react-material-ui/src/components/SelectField/SelectField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>allOption,z:()=>SelectField});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/InputLabel/InputLabel.js"),_mui_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/Select/Select.js"),_mui_material__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js"),_components_FormFieldSkeleton__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react-material-ui/src/components/FormFieldSkeleton/index.tsx");const allOption={value:"all",label:"All"},SelectField=({options=[],defaultValue,hasAllOption=!0,isLoading=!1,label,onChange,fullWidth,size,variant="outlined",...rest})=>{const finalOptions=[...hasAllOption?[allOption]:[],...options];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_FormFieldSkeleton__WEBPACK_IMPORTED_MODULE_1__.W,{isLoading,hideLabel:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{fullWidth,size},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,{id:"select-label"},label),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__.A,{labelId:"select-label",defaultValue:defaultValue??(hasAllOption&&allOption.value),onChange:event=>{const value=event.target.value;onChange((value=>value===allOption.value?null:value)(value))},label,fullWidth,size,variant,...rest},finalOptions?.map((role=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__.A,{key:role.value,value:role.value},role.label)))))))};SelectField.__docgenInfo={description:"The SelectField component is a form control that allows users to select\nan option from a dropdown menu. It supports features such as custom labels,\nloading state, the inclusion of an \"All\" option, and various MUI Select props.\nIt's props extend from [Material UI's Select](https://mui.com/material-ui/api/select/#props) component props, so every\nprop is interchangeable between those two.\n\n@see [Storybook - SelectField](https://storybook.rockets.tools/?path=/docs/selectfield)\n\n@example\n```tsx\n<SelectField\n  options={[\n    { value: 'option1', label: 'Option 1' },\n    { value: 'option2', label: 'Option 2' },\n    { value: 'option3', label: 'Option 3' },\n  ]}\n  defaultValue=\"option1\"\n  hasAllOption={true}\n  onChange={(value) => console.log(value)}\n/>\n```\n\n@param props - SelectField component props",methods:[],displayName:"SelectField",props:{options:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  /** The value of the option */\n  value: string;\n  /** The label to display for the option */\n  label: string;\n}",signature:{properties:[{key:"value",value:{name:"string",required:!0},description:"The value of the option"},{key:"label",value:{name:"string",required:!0},description:"The label to display for the option"}]}}],raw:"SelectOption[]"},description:"Array of options to display in the select dropdown",defaultValue:{value:"[]",computed:!1}},defaultValue:{required:!0,tsType:{name:"string"},description:"The default selected value"},hasAllOption:{required:!1,tsType:{name:"boolean"},description:'Whether to include the "All" option in the dropdown. True by default.',defaultValue:{value:"true",computed:!1}},isLoading:{required:!1,tsType:{name:"boolean"},description:"Whether the component is in a loading state",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string | string[] | null) => void",signature:{arguments:[{type:{name:"union",raw:"string | string[] | null",elements:[{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"null"}]},name:"value"}],return:{name:"void"}}},description:"Callback function triggered when the selected value changes"},variant:{defaultValue:{value:"'outlined'",computed:!1},required:!1}}}}}]);